[tox]
minversion = 3.2.0
envlist=py,linter,mypy,docs,coverage-report

[testenv]
extras = test
commands =
    python -m coverage run -m pytest \
      --log-level DEBUG \
      -vv \
      {posargs:tests}

[testenv:coverage-report]
description = Report coverage over all test runs.
basepython = py312
depends = py,py3{11,12},e2e
deps = coverage[toml]
skip_install = true
parallel_show_output = true
commands =
    coverage combine
    coverage report

[testenv:linter]
base_python=python3.11
deps=
    ruff
    packaging
    PyYAML
commands =
    ruff check src tests
    ruff format --check src tests
    python ./e2e/mergify_lint.py
skip_install = true
skip_sdist = true

[testenv:fix]
base_python=python3.11
deps=
    ruff
commands =
    ruff format src tests docs
    ruff check --fix src tests docs
skip_install = true
skip_sdist = true

[testenv:cli]
base_python=python3.11
deps = .
commands =
    fromager {posargs}

[testenv:e2e]
set_env =
    COVERAGE_PROCESS_START={toxinidir}/pyproject.toml
commands_pre =
    {envpython} -c 'import pathlib; pathlib.Path("{env_site_packages_dir}/cov.pth").write_text("import coverage; coverage.process_startup()")'
deps =
    .
    coverage[toml]
# empty commands
commands =

[testenv:mypy]
description = Python type checking with mypy
extras = mypy
commands =
  mypy -p fromager
  mypy tests/

[testenv:pkglint]
base_python=python3.11
deps=
    .[build]
    check-python-versions
commands=
    python -m build
    twine check dist/*.tar.gz dist/*.whl
    check-python-versions --only pyproject.toml,.github/workflows/test.yml

[testenv:docs]
description = sphinx docs
basepython = python3.11
deps = .[docs]
commands =
    sphinx-build -M html docs docs/_build -j auto --keep-going {posargs:--fail-on-warning --fresh-env -n}
